.tagtree
  h3
  svg#graph style="width:100%; height: 500px"

javascript:
  var data = #{{tags.to_json}}
  var graph_width = $('#graph').width()
  var graph_height = $('#graph').height()
  var label_height = 20
  function d3ready() {
    console.log('d3ready')
    var options = {nodeRadius: 5, maxLabelLength: 100}
    var tree = d3.layout.tree()
        .sort(null)
        .size([graph_width, graph_height-(label_height*2)])
        .children(function(d)
        {
            return (!d.children || d.children.length === 0) ? null : d.children;
        });

    var nodes = tree.nodes(data)
        links = tree.links(nodes);

    var layoutRoot = d3.select('#graph')
                       .append("svg:g")
                         .attr("class", "container")
                         .attr("transform", 'translate(0,'+label_height+')');

    // Edges between nodes as a <path class="link" />
    var link = d3.svg.diagonal()

    layoutRoot.selectAll("path.link")
       .data(links)
       .enter()
        .append("svg:line")
         .attr("class", "link")
         .attr('stroke', 'brown')
         .attr("x1", function(d){return d.source.x})
         .attr("y1", function(d){return d.source.y})
         .attr("x2", function(d){return d.target.x})
         .attr("y2", function(d){return d.target.y})

    /*
       Nodes as
       <g class="node">
           <circle class="node-dot" />
           <text />
       </g>
    */
    var nodeGroup = layoutRoot.selectAll("g.node")
       .data(nodes)
       .enter()
       .append("svg:g")
         .attr("class", "node")
         .attr("transform", function(d)
         {
             return "translate(" + d.x + "," + d.y + ")";
         });

    nodeGroup
      .append("svg:a")
         .attr("xlink:href", function(d){return "#{prefix}tags?start="+d.name})
      .append("svg:circle")
       .attr("class", "node-dot")
       .attr("r", options.nodeRadius);

    nodeGroup
      .append("svg:a")
         .attr("xlink:href", function(d){return "#{prefix}tag/"+d.name})
      .append("svg:text")
       .attr("text-anchor", function(d)
       {
           //return d.children ? "end" : "start";
           return "end"
       })
       .attr("dx", function(d)
       {
           var gap = 2 * options.nodeRadius;
           //return d.children ? -gap : gap;
           return -gap
       })
       .attr("dy", 3)
       .text(function(d){ return d.name == "__root" ? "" : d.name })
  }

